import streamlit as st
import pandas as pd
from datetime import datetime
import os

st.set_page_config(page_title="IKEA Afstof Dashboard", layout="wide")

# --- Instellingen ---
DAGEN = ["Maandag / –ü–æ–Ω–µ–¥—ñ–ª–æ–∫", "Dinsdag / –í—ñ–≤—Ç–æ—Ä–æ–∫", "Woensdag / –°–µ—Ä–µ–¥–∞", "Donderdag / –ß–µ—Ç–≤–µ—Ä", "Vrijdag / –ü‚Äô—è—Ç–Ω–∏—Ü—è", "Zaterdag / –°—É–±–æ—Ç–∞", "Zondag / –ù–µ–¥—ñ–ª—è"]
BEGANE_GROND = [
    "Koken en eten / –ü—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è —ó–∂—ñ", "Woontextiel / –î–æ–º–∞—à–Ω—ñ–π —Ç–µ–∫—Å—Ç–∏–ª—å", "Bedtextiel / –ü–æ—Å—Ç—ñ–ª—å–Ω–∞ –±—ñ–ª–∏–∑–Ω–∞", 
    "Badkamers / –í–∞–Ω–Ω—ñ –∫—ñ–º–Ω–∞—Ç–∏", "Opbergen / –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è", "Verlichting / –û—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è",
    "Vloerkleden / –ö–∏–ª–∏–º–∏", "Wanddecoratie / –ù–∞—Å—Ç—ñ–Ω–Ω–∏–π –¥–µ–∫–æ—Ä", "Woondecoratie / –î–µ–∫–æ—Ä –¥–ª—è –¥–æ–º—É", 
    "Planten / –†–æ—Å–ª–∏–Ω–∏", "Zelfbedieningsmagazijn / –°–∫–ª–∞–¥ —Å–∞–º–æ–æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è"
]
EERSTE_ETAGE = [
    "Ingang showroom (first 5) / –í—Ö—ñ–¥ —É —à–æ—É—Ä—É–º (–ø–µ—Ä—à—ñ 5)", "Woonkamers / –í—ñ—Ç–∞–ª—å–Ω—ñ", 
    "Wandmeubels / –ù–∞—Å—Ç—ñ–Ω–Ω—ñ –º–µ–±–ª—ñ", "Eetkamers / –á–¥–∞–ª—å–Ω—ñ", "Keukens / –ö—É—Ö–Ω—ñ",
    "Werkplekken / –†–æ–±–æ—á—ñ –º—ñ—Å—Ü—è", "Slaapkamers / –°–ø–∞–ª—å–Ω—ñ", "Garderobekasten / –®–∞—Ñ–∏ –¥–ª—è –æ–¥—è–≥—É", 
    "IKEA kinderland / –î–∏—Ç—è—á–∏–π –≤—ñ–¥–¥—ñ–ª IKEA"
]

CSV_LOGBOEK = "afstof_logboek.csv"

# --- Laad of maak logboek ---
if os.path.exists(CSV_LOGBOEK):
    logboek = pd.read_csv(CSV_LOGBOEK)
else:
    logboek = pd.DataFrame(columns=["Dag", "Naam", "Afdeling", "Verdieping"])

# --- Reset automatisch op maandag ---
vandaag = datetime.today().strftime("%A")
if vandaag == "Monday" and not logboek.empty:
    logboek = pd.DataFrame(columns=["Dag", "Naam", "Afdeling", "Verdieping"])
    logboek.to_csv(CSV_LOGBOEK, index=False)

# --- Interface ---
st.title("üßΩ IKEA Afstof Dashboard / –ü—Ä–∏–±–∏—Ä–∞–ª—å–Ω–∞ –ø–∞–Ω–µ–ª—å IKEA")

col1, col2 = st.columns([1, 3])
with col1:
    dag = st.selectbox("üìÖ Kies de dag / –û–±–µ—Ä–∏ –¥–µ–Ω—å:", DAGEN)
    naam = st.text_input("üë§ Jouw naam / –¢–≤–æ—î —ñ–º‚Äô—è:")
    verdieping = st.radio("üìç Kies de verdieping / –û–±–µ—Ä–∏ –ø–æ–≤–µ—Ä—Ö:", ["Begane grond / –ü–µ—Ä—à–∏–π –ø–æ–≤–µ—Ä—Ö", "Eerste etage / –î—Ä—É–≥–∏–π –ø–æ–≤–µ—Ä—Ö"])

if verdieping.startswith("Begane grond"):
    afdelingen = BEGANE_GROND
else:
    afdelingen = EERSTE_ETAGE

geselecteerd = st.multiselect("‚úÖ Welke afdelingen heb je afgestoft? / –Ø–∫—ñ –≤—ñ–¥–¥—ñ–ª–∏ —Ç–∏ –ø—Ä–∏–±—Ä–∞–≤?", afdelingen)

if st.button("‚úîÔ∏è Opslaan / –ó–±–µ—Ä–µ–≥—Ç–∏"):
    if naam and geselecteerd:
        nieuwe_records = pd.DataFrame({
            "Dag": [dag.split(" / ")[0]] * len(geselecteerd),
            "Naam": [naam] * len(geselecteerd),
            "Afdeling": geselecteerd,
            "Verdieping": [verdieping.split(" / ")[0]] * len(geselecteerd)
        })
        logboek = pd.concat([logboek, nieuwe_records], ignore_index=True)
        logboek.to_csv(CSV_LOGBOEK, index=False)
        st.success("Afdelingen opgeslagen! / –í—ñ–¥–¥—ñ–ª–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ!")
    else:
        st.warning("Vul je naam in en selecteer ten minste √©√©n afdeling. / –í–≤–µ–¥–∏ —ñ–º‚Äô—è —Ç–∞ –æ–±–µ—Ä–∏ —Ö–æ—á–∞ –± –æ–¥–∏–Ω –≤—ñ–¥–¥—ñ–ª.")

# --- Overzicht logboek ---
st.markdown("---")
st.subheader("üìñ Logboek / –ñ—É—Ä–Ω–∞–ª")
dag_filter = st.selectbox("üìÇ Toon logboek van dag / –ü–æ–∫–∞–∑–∞—Ç–∏ –∂—É—Ä–Ω–∞–ª –∑–∞ –¥–µ–Ω—å:", ["Alle dagen / –í—Å—ñ –¥–Ω—ñ"] + DAGEN)
if dag_filter.startswith("Alle dagen"):
    st.dataframe(logboek)
else:
    st.dataframe(logboek[logboek["Dag"] == dag_filter.split(" / ")[0]])

# --- Overzicht nog te doen per week voor beide verdiepingen ---
st.markdown("---")
st.subheader("üïì Wat moet nog afgestoft worden deze week? / –©–æ —â–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–∏–±—Ä–∞—Ç–∏ —Ü—å–æ–≥–æ —Ç–∏–∂–Ω—è?")

col1, col2 = st.columns(2)

with col1:
    st.markdown("### üè† Begane grond / –ü–µ—Ä—à–∏–π –ø–æ–≤–µ—Ä—Ö")
    logboek_bg = logboek[logboek["Verdieping"] == "Begane grond"]
    afgestoft_bg = logboek_bg["Afdeling"].unique().tolist()
    nog_te_doen_bg = [a for a in BEGANE_GROND if a not in afgestoft_bg]

    if nog_te_doen_bg:
        st.write("Nog te doen / –©–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑—Ä–æ–±–∏—Ç–∏:")
        for afdeling in nog_te_doen_bg:
            st.markdown(f"- üî≤ {afdeling}")
    else:
        st.success("üéâ Alles is afgestoft op de begane grond! / –£—Å–µ –ø—Ä–∏–±—Ä–∞–Ω–æ –Ω–∞ –ø–µ—Ä—à–æ–º—É –ø–æ–≤–µ—Ä—Å—ñ!")

with col2:
    st.markdown("### üõãÔ∏è Eerste etage (showroom) / –î—Ä—É–≥–∏–π –ø–æ–≤–µ—Ä—Ö (–≤–∏—Å—Ç–∞–≤–∫–∞)")
    logboek_etage = logboek[logboek["Verdieping"] == "Eerste etage"]
    afgestoft_etage = logboek_etage["Afdeling"].unique().tolist()
    nog_te_doen_etage = [a for a in EERSTE_ETAGE if a not in afgestoft_etage]

    if nog_te_doen_etage:
        st.write("Nog te doen / –©–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑—Ä–æ–±–∏—Ç–∏:")
        for afdeling in nog_te_doen_etage:
            st.markdown(f"- üî≤ {afdeling}")
    else:
        st.success("üéâ Alles is afgestoft op de eerste etage! / –£—Å–µ –ø—Ä–∏–±—Ä–∞–Ω–æ –Ω–∞ –¥—Ä—É–≥–æ–º—É –ø–æ–≤–µ—Ä—Å—ñ!")


